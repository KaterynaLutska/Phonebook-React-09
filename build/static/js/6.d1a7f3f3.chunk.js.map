{"version":3,"sources":["components/Button/Button.jsx","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","images/face.png","components/ContactList/ContactList.jsx","components/Modal/Modal.jsx","views/PhonebookView.jsx"],"names":["MyButton","title","onClick","style","Button","color","variant","type","module","exports","ContactForm","contactForEdit","useState","id","setId","name","setName","number","setNumber","dispatch","useDispatch","useEffect","handleChange","e","currentTarget","value","contacts","useSelector","contactsSelectors","contactsArray","reset","Container","maxWidth","onSubmit","newContact","preventDefault","contactsOperations","changeContact","find","el","toLowerCase","alert","some","addContact","className","s","phonebookInputFields","Input","phonebookInput","startAdornment","InputAdornment","position","inputProps","pattern","placeholder","onChange","required","Filter","filter","getFilter","filterInput","changeFilter","target","protoType","PropTypes","string","func","ContactList","getContact","classes","useStyles","getVisibleContacts","CssBaseline","cardCrid","Grid","container","spacing","map","item","xs","sm","Card","card","CardMedia","cardMedia","image","img","CardContent","cardContent","Typography","message","CardActions","deleteContacts","openModal","MуМodal","modal","children","onCloseModal","Modal","aria-labelledby","aria-describedby","open","closeAfterTransition","BackdropProps","timeout","paper","PhonebookView","setContactForEdit","modalBoolean","getModalBoolean","items","console","log","fetchContacts","length"],"mappings":"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","file":"static/js/6.d1a7f3f3.chunk.js","sourcesContent":["import { Button } from '@material-ui/core';\n\nconst MyButton = ({ title, onClick, style }) => {\n  return (\n    <Button\n      onClick={onClick}\n      color=\"primary\"\n      variant=\"contained\"\n      type=\"submit\"\n      style={style}\n    >\n      {title}\n    </Button>\n  );\n};\n\nexport default MyButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookInputFields\":\"ContactForm_phonebookInputFields__1DCHk\",\"phonebookInput\":\"ContactForm_phonebookInput__2p2Aq\",\"filterInput\":\"ContactForm_filterInput__dyhuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { contactsOperations, contactsSelectors } from '../../redux/phonebook';\n\nimport MyButton from '../Button';\nimport { Container, Input, InputAdornment } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CallIcon from '@material-ui/icons/Call';\n\nexport default function ContactForm({ contactForEdit }) {\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (contactForEdit) {\n      const { id, name, number } = contactForEdit;\n      setId(id);\n      setName(name);\n      setNumber(number);\n    }\n    return () => {\n      setId(id);\n      setName(name);\n      setNumber(number);\n    };\n  }, [contactForEdit]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n\n      default:\n    }\n  };\n\n  const contacts = useSelector(contactsSelectors.contactsArray);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setId(id);\n    setName(name);\n    setNumber(number);\n\n    let newContact;\n    reset();\n\n    if (id) {\n      dispatch(contactsOperations.changeContact({ id, name, number }));\n      return;\n    }\n\n    if (contacts.find(el => el.name.toLowerCase() === name.toLowerCase())) {\n      return alert(`${name} is already in contacts`);\n    } else if (contacts.some(el => el.number === number)) {\n      return alert(`Number ${number} is already in contacts`);\n    } else {\n      newContact = {\n        name: name,\n        number: number,\n      };\n    }\n    dispatch(contactsOperations.addContact(newContact));\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Container maxWidth=\"sm\">\n      <form onSubmit={handleSubmit}>\n        <div className={s.phonebookInputFields}>\n          <label className=\"phonebook-label\">\n            <Input\n              className={s.phonebookInput}\n              startAdornment={\n                <InputAdornment position=\"start\">\n                  <AccountCircleIcon />\n                </InputAdornment>\n              }\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              inputProps={{\n                pattern:\n                  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n                title:\n                  'The name can only consist of letters, apostrophes, dashes and spaces. For example: Jacob Mercer',\n              }}\n              placeholder=\"Kate White\"\n              onChange={handleChange}\n              required\n            />\n          </label>\n          <label className=\"phonebook-label\">\n            <Input\n              startAdornment={\n                <InputAdornment position=\"start\">\n                  <CallIcon />\n                </InputAdornment>\n              }\n              className={s.phonebookInput}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"+380683033145\"\n              onChange={handleChange}\n              required\n              inputProps={{\n                pattern: '[+][0-9]{2}[0-9]{3}[0-9]{2}[0-9]{2}[0-9]{3}',\n                title:\n                  'The phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +',\n              }}\n            />\n          </label>\n          {contactForEdit ? (\n            <MyButton title={'Edit'} />\n          ) : (\n            <MyButton title={'Add contact'} />\n          )}\n        </div>\n      </form>\n    </Container>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useCallback } from 'react';\n\nimport { contactsSelectors } from '../../redux/phonebook';\nimport { changeFilter } from '../../redux/phonebook';\n\nimport { Container, Input, InputAdornment } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  //const changeFilter = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <Container maxWidth=\"sm\">\n      <div>\n        <label>\n          <Input\n            className={s.filterInput}\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            }\n            type=\"text\"\n            value={filter}\n            placeholder=\"find contacts by name...\"\n            onChange={e => dispatch(changeFilter(e.target.value))}\n          />\n        </label>\n      </div>\n    </Container>\n  );\n}\n\nFilter.protoType = {\n  filter: PropTypes.string,\n  changeFilter: PropTypes.func,\n};\n","export default __webpack_public_path__ + \"static/media/face.c3d96184.png\";","import { useDispatch, useSelector } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport img from '../../images/face.png';\nimport { openModal } from '../../redux/phonebook/phonebook-actions';\n\nimport { contactsOperations, contactsSelectors } from '../../redux/phonebook';\n\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  CssBaseline,\n  Grid,\n  Container,\n  Typography,\n  CardActions,\n} from '@material-ui/core';\n\nimport useStyles from '../../styles';\nimport MyButton from '../Button';\n\nexport default function ContactList({ getContact }) {\n  const dispatch = useDispatch(null);\n\n  const classes = useStyles();\n\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  const onDelete = id => dispatch(contactsOperations.deleteContacts(id));\n\n  const modalOpen = () => {\n    dispatch(openModal());\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"md\" className={classes.cardCrid}>\n        <Grid container spacing={4}>\n          {contacts.map(el => (\n            <Grid key={el.id} item xs={12} sm={6}>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={img}\n                  title=\"imgTitle\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography variant=\"h5\"> {el.name + ':'} </Typography>\n                  <Typography variant=\"h5\">{el.number}</Typography>\n                  <Typography variant=\"h4\">{el.message}</Typography>\n                </CardContent>\n                <CardActions>\n                  <MyButton title={'Delete'} onClick={() => onDelete(el.id)} />\n                  <MyButton\n                    title={'Edit'}\n                    onClick={() => {\n                      modalOpen();\n                      getContact(el);\n                    }}\n                  />\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDelete: PropTypes.func,\n};\n","import React from 'react';\nimport { Modal } from '@material-ui/core';\nimport useStyles from '../../styles';\n\nexport default function MуМodal({ modal, onCloseModal, children }) {\n  const classes = useStyles();\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={modal}\n        //onClose={() => onCloseModal()}\n        closeAfterTransition\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <div className={classes.paper}>{children}</div>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport { contactsOperations } from '../redux/phonebook';\nimport { contactsSelectors } from '../redux/phonebook';\nimport MyModal from '../components/Modal';\n\nexport default function PhonebookView() {\n  const [contactForEdit, setContactForEdit] = useState(null);\n  const dispatch = useDispatch();\n\n  const modalBoolean = useSelector(contactsSelectors.getModalBoolean);\n  const items = useSelector(contactsSelectors.contactsArray);\n\n  useEffect(() => {\n    console.log('render-1 UserView');\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const getContact = contactForEdit => {\n    setContactForEdit(contactForEdit);\n  };\n\n  // const { items, modalBoolean, closeModal } = this.props;\n\n  return (\n    <>\n      <ContactForm />\n      {items.length > 0 && (\n        <>\n          <Filter />\n          <ContactList getContact={getContact} />\n        </>\n      )}\n      <MyModal modal={modalBoolean}>\n        <ContactForm contactForEdit={contactForEdit} />\n      </MyModal>\n    </>\n  );\n}\n"],"sourceRoot":""}